# Makefile.in generated by automake 1.11.6 from Makefile.am.
# libMems/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/libMems
pkgincludedir = $(includedir)/libMems
pkglibdir = $(libdir)/libMems
pkglibexecdir = $(libexecdir)/libMems
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = libMems
DIST_COMMON = $(dmsml_include_HEADERS) $(homologyhmm_include_HEADERS) \
	$(libmems_include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_cxx_namespaces.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/m4/ax_boost_iostreams.m4 \
	$(top_srcdir)/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_prog_doxygen.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/pkg.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(dmsml_includedir)" \
	"$(DESTDIR)$(homologyhmm_includedir)" \
	"$(DESTDIR)$(libmems_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libMems_1_6_la_LIBADD =
am__objects_1 = RepeatHash.lo DNAFileSML.lo MatchFinder.lo \
	DNAMemorySML.lo MemorySML.lo SortedMerList.lo FileSML.lo \
	MemHash.lo MatchHashEntry.lo Interval.lo IntervalList.lo \
	twister.lo gnAlignedSequences.lo MatchList.lo Aligner.lo \
	Islands.lo MaskedMemHash.lo GappedAlignment.lo \
	MuscleInterface.lo PhyloTree.lo RepeatMatchList.lo \
	RepeatMatch.lo Backbone.lo PairwiseMatchFinder.lo \
	ProgressiveAligner.lo SuperInterval.lo \
	GreedyBreakpointElimination.lo
am__objects_2 = algebras.lo homology.lo homologymain.lo
am__objects_3 = asyncio.lo alinuxaio.lo aPOSIXaio.lo alibc.lo \
	awin32aio.lo buffer.lo util.lo sorting.lo dmsort.lo timing.lo \
	sml.lo
am_libMems_1_6_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
libMems_1_6_la_OBJECTS = $(am_libMems_1_6_la_OBJECTS)
libMems_1_6_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libMems_1_6_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libMems_1_6_la_SOURCES)
DIST_SOURCES = $(libMems_1_6_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(dmsml_include_HEADERS) $(homologyhmm_include_HEADERS) \
	$(libmems_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/nick/projects/mauve-code/libMems/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/nick/projects/mauve-code/libMems/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/nick/projects/mauve-code/libMems/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/nick/projects/mauve-code/libMems/config/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt -lboost_system
BOOST_IOSTREAMS_LIB = -lboost_iostreams-mt
BOOST_LDFLAGS = -L/usr/lib
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options-mt
BOOST_SYSTEM_LIB = -lboost_system-mt
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPS_CFLAGS = -I/home/nick/projects/mauve-code/include/libGenome-1.3 -I/home/nick/projects/mauve-code/include/libMUSCLE-3.7  
DEPS_LIBS = -L/home/nick/projects/mauve-code/lib -lGenome-1.3 -lMUSCLE-3.7  
DLLTOOL = false
DOXYGEN_PAPER_SIZE = 
DSYMUTIL = 
DUMPBIN = 
DX_CONFIG = projects/libMems.doxygen
DX_DOCDIR = doc
DX_DOT = 
DX_DOXYGEN = 
DX_DVIPS = 
DX_EGREP = 
DX_ENV =  SRCDIR='.' PROJECT='libMems' DOCDIR='doc' VERSION='' HAVE_DOT='NO' GENERATE_MAN='NO' GENERATE_RTF='NO' GENERATE_XML='NO' GENERATE_HTMLHELP='NO' GENERATE_CHI='NO' GENERATE_HTML='NO' GENERATE_LATEX='NO'
DX_FLAG_chi = 0
DX_FLAG_chm = 0
DX_FLAG_doc = 0
DX_FLAG_dot = 0
DX_FLAG_html = 0
DX_FLAG_man = 0
DX_FLAG_pdf = 0
DX_FLAG_ps = 0
DX_FLAG_rtf = 0
DX_FLAG_xml = 0
DX_HHC = 
DX_LATEX = 
DX_MAKEINDEX = 
DX_PDFLATEX = 
DX_PERL = /usr/bin/perl
DX_PROJECT = libMems
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTRA_CXX_FLAGS = -Wno-deprecated
FGREP = /bin/grep -F
GENERIC_API_VERSION = 1.6
GENERIC_LIBRARY_NAME = libMems
GENERIC_LIBRARY_VERSION = 1:0:0
GENERIC_RELEASE = 1.6
GENERIC_VERSION = 1.6.0
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lrt -lpthread 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_VERSION_INFO = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/nick/projects/mauve-code/libMems/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = 
OPENMP_CXXFLAGS = 
OTOOL = 
OTOOL64 = 
PACKAGE = libMems
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.6.0
abs_builddir = /home/nick/projects/mauve-code/libMems/libMems
abs_srcdir = /home/nick/projects/mauve-code/libMems/libMems
abs_top_builddir = /home/nick/projects/mauve-code/libMems
abs_top_srcdir = /home/nick/projects/mauve-code/libMems
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/nick/projects/mauve-code/libMems/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/nick/projects/mauve-code
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#D_CXXFLAGS = -Wall -g -D__GNDEBUG__
OPTIMIZATION = -O2 -funroll-loops -fomit-frame-pointer -ftree-vectorize 
AM_CFLAGS = $(OPTIMIZATION) -I/home/nick/projects/mauve-code/include/libGenome-1.3 -I/home/nick/projects/mauve-code/include/libMUSCLE-3.7   -DUSE_POSIX_AIO 
AM_CXXFLAGS = $(OPTIMIZATION) -I/home/nick/projects/mauve-code/include/libGenome-1.3 -I/home/nick/projects/mauve-code/include/libMUSCLE-3.7   -I/usr/include \
	$(D_CXXFLAGS) -Wno-deprecated  \
	-DBOOST_FILESYSTEM_VERSION=2
AM_LDFLAGS = $(OPTIMIZATION)
LIBMEMS_H = \
RepeatHash.h      MatchHashEntry.h \
DNAFileSML.h     MemorySML.h         MatchProjectionAdapter.h \
DNAMemorySML.h  MatchFinder.h           SortedMerList.h IntervalList.h \
FileSML.h      gnAlignedSequences.h  Interval.h        \
MemHash.h      AbstractMatch.h    SlotAllocator.h \
Aligner.h   Match.h     MatchList.h Matrix.h NumericMatrix.h \
Islands.h   MaskedMemHash.h   SeedMasks.h GappedAlignment.h \
MuscleInterface.h GappedAligner.h PhyloTree.h SparseAbstractMatch.h \
DenseAbstractMatch.h RepeatMatch.h UngappedLocalAlignment.h \
AbstractGappedAlignment.h CompactGappedAlignment.h HybridAbstractMatch.h \
twister.h SubstitutionMatrix.h RepeatMatchList.h \
Backbone.h ProgressiveAligner.h PairwiseMatchAdapter.h PairwiseMatchFinder.h \
SeedOccurrenceList.h TreeUtilities.h SuperInterval.h GreedyBreakpointElimination.h \
LCB.h DistanceMatrix.h Scoring.h configuration.h Memory.h Files.h gnRAWSequence.h

HOMOLOGYHMM_H = HomologyHMM/homology.h HomologyHMM/dptables.h HomologyHMM/algebras.h HomologyHMM/parameters.h
DMSML_H = \
dmSML/asyncio.h dmSML/alinuxaio.h dmSML/aPOSIXaio.h \
dmSML/alibc.h dmSML/awin32aio.h dmSML/buffer.h \
dmSML/util.h dmSML/sorting.h dmSML/dmsort.h \
dmSML/timing.h dmSML/sml.h

LIBMEMS_SRC = \
RepeatHash.cpp       \
DNAFileSML.cpp       MatchFinder.cpp       \
DNAMemorySML.cpp     MemorySML.cpp        SortedMerList.cpp \
FileSML.cpp          MemHash.cpp          MatchHashEntry.cpp \
Interval.cpp	     IntervalList.cpp     twister.c \
gnAlignedSequences.cpp                     \
MatchList.cpp        Aligner.cpp \
Islands.cpp          MaskedMemHash.cpp    GappedAlignment.cpp \
MuscleInterface.cpp  PhyloTree.cpp         \
RepeatMatchList.cpp  RepeatMatch.cpp \
Backbone.cpp	PairwiseMatchFinder.cpp	ProgressiveAligner.cpp \
SuperInterval.cpp	GreedyBreakpointElimination.cpp

HOMOLOGYHMM_SRC = \
HomologyHMM/algebras.cc HomologyHMM/homology.cc HomologyHMM/homologymain.cc

DMSML_SRC = \
dmSML/asyncio.c dmSML/alinuxaio.c dmSML/aPOSIXaio.c \
dmSML/alibc.c dmSML/awin32aio.c dmSML/buffer.c \
dmSML/util.c dmSML/sorting.c dmSML/dmsort.c \
dmSML/timing.c dmSML/sml.c

libmems_includedir = $(includedir)/$(GENERIC_LIBRARY_NAME)-$(GENERIC_API_VERSION)/$(GENERIC_LIBRARY_NAME)
libmems_include_HEADERS = $(LIBMEMS_H) 

# build libraries with gcc (no suffix)
lib_LTLIBRARIES = libMems-1.6.la
libMems_1_6_la_SOURCES = $(LIBMEMS_SRC) $(HOMOLOGYHMM_SRC) $(DMSML_SRC)
libMems_1_6_la_LDFLAGS = -version-info $(GENERIC_LIBRARY_VERSION)  
homologyhmm_includedir = $(includedir)/$(GENERIC_LIBRARY_NAME)-$(GENERIC_API_VERSION)/$(GENERIC_LIBRARY_NAME)/HomologyHMM
homologyhmm_include_HEADERS = $(HOMOLOGYHMM_H)
dmsml_includedir = $(includedir)/$(GENERIC_LIBRARY_NAME)-$(GENERIC_API_VERSION)/$(GENERIC_LIBRARY_NAME)/dmSML
dmsml_include_HEADERS = $(DMSML_H)
EXTRA_DIST = \
HomologyHMM/homology.xml 

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libMems/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libMems/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMems-1.6.la: $(libMems_1_6_la_OBJECTS) $(libMems_1_6_la_DEPENDENCIES) $(EXTRA_libMems_1_6_la_DEPENDENCIES) 
	$(libMems_1_6_la_LINK) -rpath $(libdir) $(libMems_1_6_la_OBJECTS) $(libMems_1_6_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Aligner.Plo
include ./$(DEPDIR)/Backbone.Plo
include ./$(DEPDIR)/DNAFileSML.Plo
include ./$(DEPDIR)/DNAMemorySML.Plo
include ./$(DEPDIR)/FileSML.Plo
include ./$(DEPDIR)/GappedAlignment.Plo
include ./$(DEPDIR)/GreedyBreakpointElimination.Plo
include ./$(DEPDIR)/Interval.Plo
include ./$(DEPDIR)/IntervalList.Plo
include ./$(DEPDIR)/Islands.Plo
include ./$(DEPDIR)/MaskedMemHash.Plo
include ./$(DEPDIR)/MatchFinder.Plo
include ./$(DEPDIR)/MatchHashEntry.Plo
include ./$(DEPDIR)/MatchList.Plo
include ./$(DEPDIR)/MemHash.Plo
include ./$(DEPDIR)/MemorySML.Plo
include ./$(DEPDIR)/MuscleInterface.Plo
include ./$(DEPDIR)/PairwiseMatchFinder.Plo
include ./$(DEPDIR)/PhyloTree.Plo
include ./$(DEPDIR)/ProgressiveAligner.Plo
include ./$(DEPDIR)/RepeatHash.Plo
include ./$(DEPDIR)/RepeatMatch.Plo
include ./$(DEPDIR)/RepeatMatchList.Plo
include ./$(DEPDIR)/SortedMerList.Plo
include ./$(DEPDIR)/SuperInterval.Plo
include ./$(DEPDIR)/aPOSIXaio.Plo
include ./$(DEPDIR)/algebras.Plo
include ./$(DEPDIR)/alibc.Plo
include ./$(DEPDIR)/alinuxaio.Plo
include ./$(DEPDIR)/asyncio.Plo
include ./$(DEPDIR)/awin32aio.Plo
include ./$(DEPDIR)/buffer.Plo
include ./$(DEPDIR)/dmsort.Plo
include ./$(DEPDIR)/gnAlignedSequences.Plo
include ./$(DEPDIR)/homology.Plo
include ./$(DEPDIR)/homologymain.Plo
include ./$(DEPDIR)/sml.Plo
include ./$(DEPDIR)/sorting.Plo
include ./$(DEPDIR)/timing.Plo
include ./$(DEPDIR)/twister.Plo
include ./$(DEPDIR)/util.Plo

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

asyncio.lo: dmSML/asyncio.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT asyncio.lo -MD -MP -MF $(DEPDIR)/asyncio.Tpo -c -o asyncio.lo `test -f 'dmSML/asyncio.c' || echo '$(srcdir)/'`dmSML/asyncio.c
	$(am__mv) $(DEPDIR)/asyncio.Tpo $(DEPDIR)/asyncio.Plo
#	source='dmSML/asyncio.c' object='asyncio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o asyncio.lo `test -f 'dmSML/asyncio.c' || echo '$(srcdir)/'`dmSML/asyncio.c

alinuxaio.lo: dmSML/alinuxaio.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT alinuxaio.lo -MD -MP -MF $(DEPDIR)/alinuxaio.Tpo -c -o alinuxaio.lo `test -f 'dmSML/alinuxaio.c' || echo '$(srcdir)/'`dmSML/alinuxaio.c
	$(am__mv) $(DEPDIR)/alinuxaio.Tpo $(DEPDIR)/alinuxaio.Plo
#	source='dmSML/alinuxaio.c' object='alinuxaio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alinuxaio.lo `test -f 'dmSML/alinuxaio.c' || echo '$(srcdir)/'`dmSML/alinuxaio.c

aPOSIXaio.lo: dmSML/aPOSIXaio.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aPOSIXaio.lo -MD -MP -MF $(DEPDIR)/aPOSIXaio.Tpo -c -o aPOSIXaio.lo `test -f 'dmSML/aPOSIXaio.c' || echo '$(srcdir)/'`dmSML/aPOSIXaio.c
	$(am__mv) $(DEPDIR)/aPOSIXaio.Tpo $(DEPDIR)/aPOSIXaio.Plo
#	source='dmSML/aPOSIXaio.c' object='aPOSIXaio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aPOSIXaio.lo `test -f 'dmSML/aPOSIXaio.c' || echo '$(srcdir)/'`dmSML/aPOSIXaio.c

alibc.lo: dmSML/alibc.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT alibc.lo -MD -MP -MF $(DEPDIR)/alibc.Tpo -c -o alibc.lo `test -f 'dmSML/alibc.c' || echo '$(srcdir)/'`dmSML/alibc.c
	$(am__mv) $(DEPDIR)/alibc.Tpo $(DEPDIR)/alibc.Plo
#	source='dmSML/alibc.c' object='alibc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alibc.lo `test -f 'dmSML/alibc.c' || echo '$(srcdir)/'`dmSML/alibc.c

awin32aio.lo: dmSML/awin32aio.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT awin32aio.lo -MD -MP -MF $(DEPDIR)/awin32aio.Tpo -c -o awin32aio.lo `test -f 'dmSML/awin32aio.c' || echo '$(srcdir)/'`dmSML/awin32aio.c
	$(am__mv) $(DEPDIR)/awin32aio.Tpo $(DEPDIR)/awin32aio.Plo
#	source='dmSML/awin32aio.c' object='awin32aio.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o awin32aio.lo `test -f 'dmSML/awin32aio.c' || echo '$(srcdir)/'`dmSML/awin32aio.c

buffer.lo: dmSML/buffer.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT buffer.lo -MD -MP -MF $(DEPDIR)/buffer.Tpo -c -o buffer.lo `test -f 'dmSML/buffer.c' || echo '$(srcdir)/'`dmSML/buffer.c
	$(am__mv) $(DEPDIR)/buffer.Tpo $(DEPDIR)/buffer.Plo
#	source='dmSML/buffer.c' object='buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o buffer.lo `test -f 'dmSML/buffer.c' || echo '$(srcdir)/'`dmSML/buffer.c

util.lo: dmSML/util.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT util.lo -MD -MP -MF $(DEPDIR)/util.Tpo -c -o util.lo `test -f 'dmSML/util.c' || echo '$(srcdir)/'`dmSML/util.c
	$(am__mv) $(DEPDIR)/util.Tpo $(DEPDIR)/util.Plo
#	source='dmSML/util.c' object='util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o util.lo `test -f 'dmSML/util.c' || echo '$(srcdir)/'`dmSML/util.c

sorting.lo: dmSML/sorting.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sorting.lo -MD -MP -MF $(DEPDIR)/sorting.Tpo -c -o sorting.lo `test -f 'dmSML/sorting.c' || echo '$(srcdir)/'`dmSML/sorting.c
	$(am__mv) $(DEPDIR)/sorting.Tpo $(DEPDIR)/sorting.Plo
#	source='dmSML/sorting.c' object='sorting.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sorting.lo `test -f 'dmSML/sorting.c' || echo '$(srcdir)/'`dmSML/sorting.c

dmsort.lo: dmSML/dmsort.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dmsort.lo -MD -MP -MF $(DEPDIR)/dmsort.Tpo -c -o dmsort.lo `test -f 'dmSML/dmsort.c' || echo '$(srcdir)/'`dmSML/dmsort.c
	$(am__mv) $(DEPDIR)/dmsort.Tpo $(DEPDIR)/dmsort.Plo
#	source='dmSML/dmsort.c' object='dmsort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dmsort.lo `test -f 'dmSML/dmsort.c' || echo '$(srcdir)/'`dmSML/dmsort.c

timing.lo: dmSML/timing.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT timing.lo -MD -MP -MF $(DEPDIR)/timing.Tpo -c -o timing.lo `test -f 'dmSML/timing.c' || echo '$(srcdir)/'`dmSML/timing.c
	$(am__mv) $(DEPDIR)/timing.Tpo $(DEPDIR)/timing.Plo
#	source='dmSML/timing.c' object='timing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o timing.lo `test -f 'dmSML/timing.c' || echo '$(srcdir)/'`dmSML/timing.c

sml.lo: dmSML/sml.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sml.lo -MD -MP -MF $(DEPDIR)/sml.Tpo -c -o sml.lo `test -f 'dmSML/sml.c' || echo '$(srcdir)/'`dmSML/sml.c
	$(am__mv) $(DEPDIR)/sml.Tpo $(DEPDIR)/sml.Plo
#	source='dmSML/sml.c' object='sml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sml.lo `test -f 'dmSML/sml.c' || echo '$(srcdir)/'`dmSML/sml.c

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

algebras.lo: HomologyHMM/algebras.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT algebras.lo -MD -MP -MF $(DEPDIR)/algebras.Tpo -c -o algebras.lo `test -f 'HomologyHMM/algebras.cc' || echo '$(srcdir)/'`HomologyHMM/algebras.cc
	$(am__mv) $(DEPDIR)/algebras.Tpo $(DEPDIR)/algebras.Plo
#	source='HomologyHMM/algebras.cc' object='algebras.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o algebras.lo `test -f 'HomologyHMM/algebras.cc' || echo '$(srcdir)/'`HomologyHMM/algebras.cc

homology.lo: HomologyHMM/homology.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT homology.lo -MD -MP -MF $(DEPDIR)/homology.Tpo -c -o homology.lo `test -f 'HomologyHMM/homology.cc' || echo '$(srcdir)/'`HomologyHMM/homology.cc
	$(am__mv) $(DEPDIR)/homology.Tpo $(DEPDIR)/homology.Plo
#	source='HomologyHMM/homology.cc' object='homology.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o homology.lo `test -f 'HomologyHMM/homology.cc' || echo '$(srcdir)/'`HomologyHMM/homology.cc

homologymain.lo: HomologyHMM/homologymain.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT homologymain.lo -MD -MP -MF $(DEPDIR)/homologymain.Tpo -c -o homologymain.lo `test -f 'HomologyHMM/homologymain.cc' || echo '$(srcdir)/'`HomologyHMM/homologymain.cc
	$(am__mv) $(DEPDIR)/homologymain.Tpo $(DEPDIR)/homologymain.Plo
#	source='HomologyHMM/homologymain.cc' object='homologymain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o homologymain.lo `test -f 'HomologyHMM/homologymain.cc' || echo '$(srcdir)/'`HomologyHMM/homologymain.cc

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dmsml_includeHEADERS: $(dmsml_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(dmsml_include_HEADERS)'; test -n "$(dmsml_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dmsml_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dmsml_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(dmsml_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(dmsml_includedir)" || exit $$?; \
	done

uninstall-dmsml_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(dmsml_include_HEADERS)'; test -n "$(dmsml_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dmsml_includedir)'; $(am__uninstall_files_from_dir)
install-homologyhmm_includeHEADERS: $(homologyhmm_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(homologyhmm_include_HEADERS)'; test -n "$(homologyhmm_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(homologyhmm_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(homologyhmm_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(homologyhmm_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(homologyhmm_includedir)" || exit $$?; \
	done

uninstall-homologyhmm_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(homologyhmm_include_HEADERS)'; test -n "$(homologyhmm_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(homologyhmm_includedir)'; $(am__uninstall_files_from_dir)
install-libmems_includeHEADERS: $(libmems_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libmems_include_HEADERS)'; test -n "$(libmems_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libmems_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libmems_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmems_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmems_includedir)" || exit $$?; \
	done

uninstall-libmems_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmems_include_HEADERS)'; test -n "$(libmems_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libmems_includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(dmsml_includedir)" "$(DESTDIR)$(homologyhmm_includedir)" "$(DESTDIR)$(libmems_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dmsml_includeHEADERS \
	install-homologyhmm_includeHEADERS \
	install-libmems_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dmsml_includeHEADERS \
	uninstall-homologyhmm_includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-libmems_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am \
	install-dmsml_includeHEADERS install-dvi install-dvi-am \
	install-exec install-exec-am \
	install-homologyhmm_includeHEADERS install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libmems_includeHEADERS \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-dmsml_includeHEADERS \
	uninstall-homologyhmm_includeHEADERS uninstall-libLTLIBRARIES \
	uninstall-libmems_includeHEADERS


#EXTRA_PROGRAMS = TestSML TestSMLstatic

#TestSMLstatic_SOURCES = TestSML.cpp
#TestSMLstatic_INCLUDES = -I$(top_srcdir)/include/ `wx-config --cxxflags`
#TestSMLstatic_LDFLAGS = -static $(top_builddir)/libMems/libMems.a `wx-config --static --libs`

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
